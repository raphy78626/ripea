
package es.caib.bantel.ws.v2.services;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b14002
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "BackofficeFacadeService", targetNamespace = "urn:es:caib:bantel:ws:v2:services", wsdlLocation = "file:/C:/Users/PereP/git/ripea/ripea-plugin-impl/wsdl/sistra-bantel/BackofficeFacade.wsdl")
public class BackofficeFacadeService
    extends Service
{

    private final static URL BACKOFFICEFACADESERVICE_WSDL_LOCATION;
    private final static WebServiceException BACKOFFICEFACADESERVICE_EXCEPTION;
    private final static QName BACKOFFICEFACADESERVICE_QNAME = new QName("urn:es:caib:bantel:ws:v2:services", "BackofficeFacadeService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/PereP/git/ripea/ripea-plugin-impl/wsdl/sistra-bantel/BackofficeFacade.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        BACKOFFICEFACADESERVICE_WSDL_LOCATION = url;
        BACKOFFICEFACADESERVICE_EXCEPTION = e;
    }

    public BackofficeFacadeService() {
        super(__getWsdlLocation(), BACKOFFICEFACADESERVICE_QNAME);
    }

    public BackofficeFacadeService(WebServiceFeature... features) {
        super(__getWsdlLocation(), BACKOFFICEFACADESERVICE_QNAME, features);
    }

    public BackofficeFacadeService(URL wsdlLocation) {
        super(wsdlLocation, BACKOFFICEFACADESERVICE_QNAME);
    }

    public BackofficeFacadeService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, BACKOFFICEFACADESERVICE_QNAME, features);
    }

    public BackofficeFacadeService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BackofficeFacadeService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns BackofficeFacade
     */
    @WebEndpoint(name = "BackofficeFacade")
    public BackofficeFacade getBackofficeFacade() {
        return super.getPort(new QName("urn:es:caib:bantel:ws:v2:services", "BackofficeFacade"), BackofficeFacade.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BackofficeFacade
     */
    @WebEndpoint(name = "BackofficeFacade")
    public BackofficeFacade getBackofficeFacade(WebServiceFeature... features) {
        return super.getPort(new QName("urn:es:caib:bantel:ws:v2:services", "BackofficeFacade"), BackofficeFacade.class, features);
    }

    private static URL __getWsdlLocation() {
        if (BACKOFFICEFACADESERVICE_EXCEPTION!= null) {
            throw BACKOFFICEFACADESERVICE_EXCEPTION;
        }
        return BACKOFFICEFACADESERVICE_WSDL_LOCATION;
    }

}
